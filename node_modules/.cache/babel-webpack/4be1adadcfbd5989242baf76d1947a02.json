{"ast":null,"code":"import _asyncToGenerator from \"/Users/kieran/development/Website/kierans_website/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { decorateProperty } from './base.js'; // Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first: Promise<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\n\nexport function queryAsync(selector) {\n  return decorateProperty({\n    descriptor: _name => ({\n      get() {\n        var _this = this;\n\n        return _asyncToGenerator(function* () {\n          var _a;\n\n          yield _this.updateComplete;\n          return (_a = _this.renderRoot) === null || _a === void 0 ? void 0 : _a.querySelector(selector);\n        })();\n      },\n\n      enumerable: true,\n      configurable: true\n    })\n  });\n}","map":{"version":3,"sources":["/Users/kieran/development/Website/kierans_website/node_modules/@lit/reactive-element/development/decorators/query-async.js"],"names":["decorateProperty","queryAsync","selector","descriptor","_name","get","_a","updateComplete","renderRoot","querySelector","enumerable","configurable"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAT,QAAiC,WAAjC,C,CACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AACjC,SAAOF,gBAAgB,CAAC;AACpBG,IAAAA,UAAU,EAAGC,KAAD,KAAY;AACdC,MAAAA,GAAN,GAAY;AAAA;;AAAA;AACR,cAAIC,EAAJ;;AACA,gBAAM,KAAI,CAACC,cAAX;AACA,iBAAO,CAACD,EAAE,GAAG,KAAI,CAACE,UAAX,MAA2B,IAA3B,IAAmCF,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACG,aAAH,CAAiBP,QAAjB,CAAnE;AAHQ;AAIX,OALmB;;AAMpBQ,MAAAA,UAAU,EAAE,IANQ;AAOpBC,MAAAA,YAAY,EAAE;AAPM,KAAZ;AADQ,GAAD,CAAvB;AAWH","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { decorateProperty } from './base.js';\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first: Promise<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector) {\n    return decorateProperty({\n        descriptor: (_name) => ({\n            async get() {\n                var _a;\n                await this.updateComplete;\n                return (_a = this.renderRoot) === null || _a === void 0 ? void 0 : _a.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        }),\n    });\n}\n"]},"metadata":{},"sourceType":"module"}