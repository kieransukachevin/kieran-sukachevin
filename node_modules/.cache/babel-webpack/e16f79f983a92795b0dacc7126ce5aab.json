{"ast":null,"code":"\"use strict\";\n\nimport _asyncToGenerator from \"/Users/kieran/development/Website/kierans_website/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n\n  for (var i = decorators.length - 1, decorator; i >= 0; i--) if (decorator = decorators[i]) result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\n\nimport { html } from \"@spectrum-web-components/base\";\nimport { property, query } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport { IconsetRegistry } from \"@spectrum-web-components/iconset/src/iconset-registry.js\";\nimport { IconBase } from \"./IconBase.dev.js\";\nexport class Icon extends IconBase {\n  constructor() {\n    super(...arguments);\n\n    this.iconsetListener = event => {\n      if (!this.name) {\n        return;\n      }\n\n      const icon = this.parseIcon(this.name);\n\n      if (event.detail.name === icon.iconset) {\n        this.updateIconPromise = this.updateIcon();\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener(\"sp-iconset-added\", this.iconsetListener);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    window.removeEventListener(\"sp-iconset-added\", this.iconsetListener);\n  }\n\n  firstUpdated() {\n    this.updateIconPromise = this.updateIcon();\n  }\n\n  attributeChangedCallback(name, old, value) {\n    super.attributeChangedCallback(name, old, value);\n    this.updateIconPromise = this.updateIcon();\n  }\n\n  render() {\n    if (this.name) {\n      return html`\n                <div id=\"container\"></div>\n            `;\n    } else if (this.src) {\n      return html`\n                <img src=\"${this.src}\" alt=${ifDefined(this.label)} />\n            `;\n    }\n\n    return super.render();\n  }\n\n  updateIcon() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.updateIconPromise) {\n        yield _this.updateIconPromise;\n      }\n\n      if (!_this.name) {\n        return Promise.resolve();\n      }\n\n      const icon = _this.parseIcon(_this.name);\n\n      const iconset = IconsetRegistry.getInstance().getIconset(icon.iconset);\n\n      if (!iconset) {\n        return Promise.resolve();\n      }\n\n      if (!_this.iconContainer) {\n        return Promise.resolve();\n      }\n\n      _this.iconContainer.innerHTML = \"\";\n      return iconset.applyIconToElement(_this.iconContainer, icon.icon, _this.size || \"\", _this.label ? _this.label : \"\");\n    })();\n  }\n\n  parseIcon(icon) {\n    const iconParts = icon.split(\":\");\n    let iconsetName = \"default\";\n    let iconName = icon;\n\n    if (iconParts.length > 1) {\n      iconsetName = iconParts[0];\n      iconName = iconParts[1];\n    }\n\n    return {\n      iconset: iconsetName,\n      icon: iconName\n    };\n  }\n\n  getUpdateComplete() {\n    var _superprop_getGetUpdateComplete = () => super.getUpdateComplete,\n        _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const complete = yield _superprop_getGetUpdateComplete().call(_this2);\n      yield _this2.updateIconPromise;\n      return complete;\n    })();\n  }\n\n}\n\n__decorateClass([property()], Icon.prototype, \"src\", 2);\n\n__decorateClass([property()], Icon.prototype, \"name\", 2);\n\n__decorateClass([query(\"#container\")], Icon.prototype, \"iconContainer\", 2);","map":{"version":3,"sources":["/Users/kieran/development/Website/kierans_website/node_modules/@spectrum-web-components/icon/src/Icon.dev.js"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__decorateClass","decorators","target","key","kind","result","i","length","decorator","html","property","query","ifDefined","IconsetRegistry","IconBase","Icon","constructor","arguments","iconsetListener","event","name","icon","parseIcon","detail","iconset","updateIconPromise","updateIcon","connectedCallback","window","addEventListener","disconnectedCallback","removeEventListener","firstUpdated","attributeChangedCallback","old","value","render","src","label","Promise","resolve","getInstance","getIconset","iconContainer","innerHTML","applyIconToElement","size","iconParts","split","iconsetName","iconName","getUpdateComplete","complete","prototype"],"mappings":"AAAA;;;AACA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAvB;AACA,IAAIC,gBAAgB,GAAGF,MAAM,CAACG,wBAA9B;;AACA,IAAIC,eAAe,GAAG,CAACC,UAAD,EAAaC,MAAb,EAAqBC,GAArB,EAA0BC,IAA1B,KAAmC;AACvD,MAAIC,MAAM,GAAGD,IAAI,GAAG,CAAP,GAAW,KAAK,CAAhB,GAAoBA,IAAI,GAAGN,gBAAgB,CAACI,MAAD,EAASC,GAAT,CAAnB,GAAmCD,MAAxE;;AACA,OAAK,IAAII,CAAC,GAAGL,UAAU,CAACM,MAAX,GAAoB,CAA5B,EAA+BC,SAApC,EAA+CF,CAAC,IAAI,CAApD,EAAuDA,CAAC,EAAxD,EACE,IAAIE,SAAS,GAAGP,UAAU,CAACK,CAAD,CAA1B,EACED,MAAM,GAAG,CAACD,IAAI,GAAGI,SAAS,CAACN,MAAD,EAASC,GAAT,EAAcE,MAAd,CAAZ,GAAoCG,SAAS,CAACH,MAAD,CAAlD,KAA+DA,MAAxE;;AACJ,MAAID,IAAI,IAAIC,MAAZ,EACEV,SAAS,CAACO,MAAD,EAASC,GAAT,EAAcE,MAAd,CAAT;AACF,SAAOA,MAAP;AACD,CARD;;AASA,SAASI,IAAT,QAAqB,+BAArB;AACA,SACEC,QADF,EAEEC,KAFF,QAGO,iDAHP;AAIA,SAASC,SAAT,QAA0B,iDAA1B;AACA,SAASC,eAAT,QAAgC,0DAAhC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAO,MAAMC,IAAN,SAAmBD,QAAnB,CAA4B;AACjCE,EAAAA,WAAW,GAAG;AACZ,UAAM,GAAGC,SAAT;;AACA,SAAKC,eAAL,GAAwBC,KAAD,IAAW;AAChC,UAAI,CAAC,KAAKC,IAAV,EAAgB;AACd;AACD;;AACD,YAAMC,IAAI,GAAG,KAAKC,SAAL,CAAe,KAAKF,IAApB,CAAb;;AACA,UAAID,KAAK,CAACI,MAAN,CAAaH,IAAb,KAAsBC,IAAI,CAACG,OAA/B,EAAwC;AACtC,aAAKC,iBAAL,GAAyB,KAAKC,UAAL,EAAzB;AACD;AACF,KARD;AASD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMA,iBAAN;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,EAA4C,KAAKX,eAAjD;AACD;;AACDY,EAAAA,oBAAoB,GAAG;AACrB,UAAMA,oBAAN;AACAF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,kBAA3B,EAA+C,KAAKb,eAApD;AACD;;AACDc,EAAAA,YAAY,GAAG;AACb,SAAKP,iBAAL,GAAyB,KAAKC,UAAL,EAAzB;AACD;;AACDO,EAAAA,wBAAwB,CAACb,IAAD,EAAOc,GAAP,EAAYC,KAAZ,EAAmB;AACzC,UAAMF,wBAAN,CAA+Bb,IAA/B,EAAqCc,GAArC,EAA0CC,KAA1C;AACA,SAAKV,iBAAL,GAAyB,KAAKC,UAAL,EAAzB;AACD;;AACDU,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKhB,IAAT,EAAe;AACb,aAAOX,IAAK;AAClB;AACA,aAFM;AAGD,KAJD,MAIO,IAAI,KAAK4B,GAAT,EAAc;AACnB,aAAO5B,IAAK;AAClB,4BAA4B,KAAK4B,GAAI,SAAQzB,SAAS,CAAC,KAAK0B,KAAN,CAAa;AACnE,aAFM;AAGD;;AACD,WAAO,MAAMF,MAAN,EAAP;AACD;;AACKV,EAAAA,UAAU,GAAG;AAAA;;AAAA;AACjB,UAAI,KAAI,CAACD,iBAAT,EAA4B;AAC1B,cAAM,KAAI,CAACA,iBAAX;AACD;;AACD,UAAI,CAAC,KAAI,CAACL,IAAV,EAAgB;AACd,eAAOmB,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,YAAMnB,IAAI,GAAG,KAAI,CAACC,SAAL,CAAe,KAAI,CAACF,IAApB,CAAb;;AACA,YAAMI,OAAO,GAAGX,eAAe,CAAC4B,WAAhB,GAA8BC,UAA9B,CAAyCrB,IAAI,CAACG,OAA9C,CAAhB;;AACA,UAAI,CAACA,OAAL,EAAc;AACZ,eAAOe,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,UAAI,CAAC,KAAI,CAACG,aAAV,EAAyB;AACvB,eAAOJ,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,MAAA,KAAI,CAACG,aAAL,CAAmBC,SAAnB,GAA+B,EAA/B;AACA,aAAOpB,OAAO,CAACqB,kBAAR,CACL,KAAI,CAACF,aADA,EAELtB,IAAI,CAACA,IAFA,EAGL,KAAI,CAACyB,IAAL,IAAa,EAHR,EAIL,KAAI,CAACR,KAAL,GAAa,KAAI,CAACA,KAAlB,GAA0B,EAJrB,CAAP;AAhBiB;AAsBlB;;AACDhB,EAAAA,SAAS,CAACD,IAAD,EAAO;AACd,UAAM0B,SAAS,GAAG1B,IAAI,CAAC2B,KAAL,CAAW,GAAX,CAAlB;AACA,QAAIC,WAAW,GAAG,SAAlB;AACA,QAAIC,QAAQ,GAAG7B,IAAf;;AACA,QAAI0B,SAAS,CAACxC,MAAV,GAAmB,CAAvB,EAA0B;AACxB0C,MAAAA,WAAW,GAAGF,SAAS,CAAC,CAAD,CAAvB;AACAG,MAAAA,QAAQ,GAAGH,SAAS,CAAC,CAAD,CAApB;AACD;;AACD,WAAO;AAAEvB,MAAAA,OAAO,EAAEyB,WAAX;AAAwB5B,MAAAA,IAAI,EAAE6B;AAA9B,KAAP;AACD;;AACKC,EAAAA,iBAAiB,GAAG;AAAA;AAAA;;AAAA;AACxB,YAAMC,QAAQ,SAAS,8CAAvB;AACA,YAAM,MAAI,CAAC3B,iBAAX;AACA,aAAO2B,QAAP;AAHwB;AAIzB;;AA7EgC;;AA+EnCpD,eAAe,CAAC,CACdU,QAAQ,EADM,CAAD,EAEZK,IAAI,CAACsC,SAFO,EAEI,KAFJ,EAEW,CAFX,CAAf;;AAGArD,eAAe,CAAC,CACdU,QAAQ,EADM,CAAD,EAEZK,IAAI,CAACsC,SAFO,EAEI,MAFJ,EAEY,CAFZ,CAAf;;AAGArD,eAAe,CAAC,CACdW,KAAK,CAAC,YAAD,CADS,CAAD,EAEZI,IAAI,CAACsC,SAFO,EAEI,eAFJ,EAEqB,CAFrB,CAAf","sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\nimport { html } from \"@spectrum-web-components/base\";\nimport {\n  property,\n  query\n} from \"@spectrum-web-components/base/src/decorators.js\";\nimport { ifDefined } from \"@spectrum-web-components/base/src/directives.js\";\nimport { IconsetRegistry } from \"@spectrum-web-components/iconset/src/iconset-registry.js\";\nimport { IconBase } from \"./IconBase.dev.js\";\nexport class Icon extends IconBase {\n  constructor() {\n    super(...arguments);\n    this.iconsetListener = (event) => {\n      if (!this.name) {\n        return;\n      }\n      const icon = this.parseIcon(this.name);\n      if (event.detail.name === icon.iconset) {\n        this.updateIconPromise = this.updateIcon();\n      }\n    };\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener(\"sp-iconset-added\", this.iconsetListener);\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    window.removeEventListener(\"sp-iconset-added\", this.iconsetListener);\n  }\n  firstUpdated() {\n    this.updateIconPromise = this.updateIcon();\n  }\n  attributeChangedCallback(name, old, value) {\n    super.attributeChangedCallback(name, old, value);\n    this.updateIconPromise = this.updateIcon();\n  }\n  render() {\n    if (this.name) {\n      return html`\n                <div id=\"container\"></div>\n            `;\n    } else if (this.src) {\n      return html`\n                <img src=\"${this.src}\" alt=${ifDefined(this.label)} />\n            `;\n    }\n    return super.render();\n  }\n  async updateIcon() {\n    if (this.updateIconPromise) {\n      await this.updateIconPromise;\n    }\n    if (!this.name) {\n      return Promise.resolve();\n    }\n    const icon = this.parseIcon(this.name);\n    const iconset = IconsetRegistry.getInstance().getIconset(icon.iconset);\n    if (!iconset) {\n      return Promise.resolve();\n    }\n    if (!this.iconContainer) {\n      return Promise.resolve();\n    }\n    this.iconContainer.innerHTML = \"\";\n    return iconset.applyIconToElement(\n      this.iconContainer,\n      icon.icon,\n      this.size || \"\",\n      this.label ? this.label : \"\"\n    );\n  }\n  parseIcon(icon) {\n    const iconParts = icon.split(\":\");\n    let iconsetName = \"default\";\n    let iconName = icon;\n    if (iconParts.length > 1) {\n      iconsetName = iconParts[0];\n      iconName = iconParts[1];\n    }\n    return { iconset: iconsetName, icon: iconName };\n  }\n  async getUpdateComplete() {\n    const complete = await super.getUpdateComplete();\n    await this.updateIconPromise;\n    return complete;\n  }\n}\n__decorateClass([\n  property()\n], Icon.prototype, \"src\", 2);\n__decorateClass([\n  property()\n], Icon.prototype, \"name\", 2);\n__decorateClass([\n  query(\"#container\")\n], Icon.prototype, \"iconContainer\", 2);\n"]},"metadata":{},"sourceType":"module"}